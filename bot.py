import telebot
import configure
import sqlite3
from telebot import types
from SimpleQIWI import *

bot = telebot.TeleBot(configure.config['token']) #–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
con = sqlite3.connect('baza.db', check_same_thread=False) #–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î
cur = con.cursor()# –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞ (–¥–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∏ –ø–æ–ª—É—á–∞–µ—Ç –∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã)
lock = threading.Lock() #–ë–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫
api = QApi(token=configure.config['tokenqiwi'], phone=configure.config['phoneqiwi']) #–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–∏–≤–∏
markdown = """   
    *bold text*
    _italic text_
    [text](URL) 
    """  #–ü–æ–ª—É–∂–∏—Ä–Ω—ã–π, –∫—É—Ä—Å–∏–≤–Ω—ã–π –∏ –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—ã–π —à—Ä–∏—Ñ—Ç

cur.execute("""CREATE TABLE IF NOT EXISTS users (id BIGINT, nick TEXT, cash INT, access INT, bought INT)""")  #–ú–µ—Ç–æ–¥—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
cur.execute("""CREATE TABLE IF NOT EXISTS shop (id INT, name TEXT, price INT, tovar TEXT, whobuy TEXT)""")    #–∫–æ–º–∞–Ω–¥ SQL
con.commit()  #–ú–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –≤–Ω–µ—Å–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î

@bot.message_handler(commands=['start']) #–û–±—ä—è–≤–ª–µ–Ω–∏ –∫–æ–º–∞–Ω–¥—ã, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –±–æ—Ç
def start(message):
	try:
		cur.execute(f"SELECT id FROM users WHERE id = {message.from_user.id}")
		if cur.fetchone() is None:
			cur.execute(f"INSERT INTO users VALUES ({message.from_user.id}, '{message.from_user.first_name}', 0, 0, 0)")
			bot.send_message(message.chat.id, f"üëæ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω –ø–æ–∫—É–ø–∫–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤, {message.from_user.first_name}!üëæ\n –ü—Ä–æ–ø–∏—à–∏—Ç–µ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã\n")
			con.commit()
		else:
			bot.send_message(message.chat.id, f"ü¶¶ –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –ü—Ä–æ–ø–∏—à–∏—Ç–µ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã.")
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.message_handler(commands=['getrazrab'])
def getrazrab(message):
	if message.from_user.id == 1942166894:
		cur.execute(f"UPDATE users SET access = 777 WHERE id = 1942166894")
		bot.send_message(message.chat.id, f"–í—ã –≤—ã–¥–∞–ª–∏ —Å–µ–±–µ –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞")
		con.commit()
	else:
		bot.send_message(message.chat.id, f"–û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ!")

@bot.message_handler(commands=['profile'])
def profile(message):
	try:
		cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}")
		getaccess = cur.fetchone()[3]
		if getaccess == 0:
			access = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
		elif getaccess == 1:
			access = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
		elif getaccess == 666:
			access = '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'
		for info in cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}"):
			bot.send_message(message.chat.id, f"*üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:*\n\n*ID:* {info[0]}\n*–ë–∞–ª–∞–Ω—Å:* {info[2]}‚ÇΩ\n*–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞:* {access}\n*–ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:* {info[4]}", parse_mode='Markdown')
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.message_handler(commands=['help'])
def help(message):
	with lock:
		mes = message.chat.id
		cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}")
		getaccess = cur.fetchone()[3]
	if getaccess >= 1:
		bot.send_message(mes, '*–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:*\n\n*–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n/profile - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n/help - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n/helper - –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø—Ä–æ–¥–∞–∂–µ/–ø–æ–∫—É–ø–∫–µ\n/buy - –ö—É–ø–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç\n/donate - –ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç\n/mybuy - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤\n/guard - –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–º–æ—â–Ω–∏–∫–æ–º\n\n*–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏*\n/viewprofile - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á—É–∂–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n'
							  '/allusers - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n/accesslvl - –í—ã–¥–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞\n/givemoney - –í—ã–¥–∞—Ç—å –¥–µ–Ω—å–≥–∏\n/getid - –£–∑–Ω–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n/addbuy - –î–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç\n/changebuy - –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ\n/deletebuy - –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä+\n/ot - –û—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é',parse_mode='Markdown')
	else:
		bot.send_message(message.chat.id, '*–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:*\n\n*–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n/profile - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n/help - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n/helper - –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø—Ä–æ–¥–∞–∂–µ/–ø–æ–∫—É–ø–∫–µ\n/buy - –ö—É–ø–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç\n/donate - –ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç\n/mybuy - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤\n/answer - –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–º–æ—â–Ω–∏–∫–æ–º',parse_mode='Markdown')

@bot.message_handler(commands=['helper'])
def helper(message):
	try:
		bot.send_message(message.chat.id,'*–ü–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø—Ä–æ–¥–∞–∂–µ-–ø–æ–∫—É–ø–∫–µ*\n\n–í –ø—Ä–æ–¥–∞–∂–µ-–ø–æ–∫—É–ø–∫–µ —É—á–∞—Å—Ç–≤—É—é—Ç 3 —á–µ–ª–æ–≤–µ–∫–∞:\n1 - –ø—Ä–æ–¥–∞–≤–µ—Ü\n2 - –ø–æ–∫—É–ø–∞—Ç–µ–ª—å\n3 - –ª–∏—Ü–æ, –∑–∞—â–∏—â–∞—é—â–µ–µ –ø—Ä–∞–≤–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –∏ –ø—Ä–æ–¥–∞–≤—Ü–∞\n\n*–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –ø—Ä–æ–ø–∏—à–∏—Ç–µ /guard*\n*–í –ø–∏—Å—å–º–µ —É–∫–∞–∂–∏—Ç–µ:*\n–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã\n–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞\n–°—É–º–º–∞ –∞–∫–∫–∞—É–Ω—Ç–∞\n\n*–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∞–∫–∫–∞—É–Ω—Ç, –ø—Ä–æ–ø–∏—à–∏—Ç–µ /buy*'
								'\n–í—ã–±–µ—Ä–µ—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–æ /guard\n\n*–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã*\n*1.–ö–∞–∫ –ø–æ–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å—á–µ—Ç?*\n–°—á–µ—Ç –ø–æ–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã Qiwi\n–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /donate\n–ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ä–µ–¥—Å—Ç–≤ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å –≤–∞—à–∏–º ID\n–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä–∏—Ç –∑–∞—è–≤–∫—É –ø–æ—Å–ª–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤\n–í —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤ –Ω–∞ –≤–∞—à –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π —Å—á–µ—Ç –ø–æ—Å—Ç—É–ø—è—Ç —Å—Ä–µ–¥—Å—Ç–≤–∞'
								'\n*2.–ö–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–¥–µ–ª–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞?*\n–í—Å—è –æ–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º (/guard)\n–ü–æ–º–æ—â–Ω–∏–∫ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –≥–∞—Ä–∞–Ω—Ç–∏–∏ —á–µ—Å—Ç–Ω–æ–π —Å–¥–µ–ª–∫–∏ –∏ –∑–∞—â–∏—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–æ –µ–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è\n–ï—Å–ª–∏ –≤—ã –∫—É–ø–∏–ª–∏ –∞–∫–∫–∞—É–Ω—Ç, —Ç–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –ø–æ –∞–¥—Ä–µ—Å—É /guard\n–ü—Ä–æ–ø–∏—à–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–∫—É–ø–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞\n–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–º–æ—â–Ω–∏–∫ —Å–≤—è–∂–µ—Ç—Å—è —Å –ø—Ä–æ–¥–∞–≤—Ü–æ–º –∏ –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–º'
								'\n–û–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—é –∏ —Å—É–º–º—É –ø–æ–∫—É–ø–∫–∏ –ø—Ä–æ–¥–∞–≤—Ü—É',parse_mode='Markdown')
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.message_handler(commands=['buy'])
def buy(message):
	try:
		text = '*–°–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤*\n\n'
		for info in cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}"):
			for infoshop in cur.execute(f"SELECT * FROM shop"):
				text += f"{infoshop[0]}. {infoshop[1]}\n–¶–µ–Ω–∞: {infoshop[2]} \n–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞:\n{infoshop[3]}\n"
			rmk = types.InlineKeyboardMarkup()
			item_yes = types.InlineKeyboardButton(text='‚úÖ', callback_data='firstbuytovaryes')
			item_no = types.InlineKeyboardButton(text='‚ùå', callback_data='firstbuytovarno')
			rmk.add(item_yes, item_no)
			msg = bot.send_message(message.chat.id, f'{text}*–í—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–∫—É–ø–∫–µ —Ç–æ–≤–∞—Ä–∞?*',parse_mode='Markdown',reply_markup=rmk)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def buy_next(message):
	try:
		if message.text == message.text:
			global tovarid
			tovarid = int(message.text)
			for info in cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}"):
				for infoshop in cur.execute(f"SELECT * FROM shop WHERE id = {tovarid}"):
					if info[2] < infoshop[2]:
						bot.send_message(message.chat.id, '*–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞!*\n\n–ß—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç, –ø—Ä–æ–ø–∏—à–∏—Ç–µ /donate')
					else:
						rmk = types.InlineKeyboardMarkup()
						item_yes = types.InlineKeyboardButton(text='‚úÖ',callback_data='buytovaryes')
						item_no = types.InlineKeyboardButton(text='‚ùå',callback_data='buytovarno')
						rmk.add(item_yes, item_no)
						msg = bot.send_message(message.chat.id, f"–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞?",reply_markup=rmk)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.callback_query_handler(lambda call: call.data == 'firstbuytovaryes' or call.data == 'firstbuytovarno')
def firstbuy_callback(call):
	try:
		if call.data == 'firstbuytovaryes':
			msg = bot.send_message(call.message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å:*",parse_mode='Markdown')
			bot.register_next_step_handler(msg, buy_next)
		elif call.data == 'firstbuytovarno':
			bot.delete_message(call.message.chat.id, call.message.message_id-0)
			bot.send_message(call.message.chat.id, f"–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–∫—É–ø–∫—É –∞–∫–∫–∞—É–Ω—Ç–∞")
		bot.answer_callback_query(callback_query_id=call.id)
	except:
		bot.send_message(call.message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.callback_query_handler(lambda call: call.data == 'buytovaryes' or call.data == 'buytovarno')
def buy_callback(call):
	try:
		if call.data == 'buytovaryes':
			for info in cur.execute(f"SELECT * FROM users WHERE id = {call.from_user.id}"):
				for infoshop in cur.execute(f"SELECT * FROM shop WHERE id = {tovarid}"):
					if str(info[0]) not in infoshop[4]:
						cashtovar = int(info[2] - infoshop[2])
						boughttovar = int(info[4] + 1)
						whobuytovarinttostr = str(info[0])
						whobuytovar = str(infoshop[4] + whobuytovarinttostr + ',')
						cur.execute(f"SELECT * FROM users WHERE id = {call.from_user.id}")
						bot.delete_message(call.message.chat.id, call.message.message_id-0)
						bot.send_message(call.message.chat.id, f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –∞–∫–∫–∞—É–Ω—Ç\n\n–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã: {infoshop[1]}\n–¶–µ–Ω–∞: {infoshop[2]}\n–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:\n {infoshop[3]}")
						cur.execute(f"UPDATE users SET cash = {cashtovar} WHERE id = {call.from_user.id}")
						cur.execute(f"UPDATE users SET bought = {boughttovar} WHERE id = {call.from_user.id}")
						cur.execute(f"SELECT * FROM shop WHERE id = {tovarid}")
						cur.execute(f"UPDATE shop SET whobuy = '{whobuytovar}' WHERE id = {tovarid}")
						con.commit()
					else:
						bot.delete_message(call.message.chat.id, call.message.message_id-0)
						bot.send_message(call.message.chat.id, f"*–î–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä —É–∂–µ –∫—É–ø–ª–µ–Ω!*",parse_mode='Markdown')
		elif call.data == 'buytovarno':
			bot.delete_message(call.message.chat.id, call.message.message_id-0)
			bot.send_message(call.message.chat.id, f"*–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–∫—É–ø–∫—É —Ç–æ–≤–∞—Ä–∞!*")
		bot.answer_callback_query(callback_query_id=call.id)
	except:
		bot.send_message(call.message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.message_handler(commands=['donate'])
def donate(message):
	try:
		msg = bot.send_message(message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:*",parse_mode='Markdown')
		bot.register_next_step_handler(msg, donate_value)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.message_handler(commands=['mybuy'])
def mybuy(message):
	try:
		text = '*–°–ø–∏—Å–æ–∫ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:*\n\n'
		for info in cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}"):
			for infoshop in cur.execute(f"SELECT * FROM shop"):
				if str(info[0]) in infoshop[4]:
					text += f"*{infoshop[0]}. {infoshop[1]}*\n–¢–æ–≤–∞—Ä: {infoshop[3]}\n\n"
		bot.send_message(message.chat.id,f"{text}",parse_mode='Markdown',disable_web_page_preview=True)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.message_handler(commands=['guard'])
def guard(message):
	try:
		msg = bot.send_message(message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–º–æ—â–Ω–∏–∫—É*",parse_mode='Markdown')
		bot.register_next_step_handler(msg, teh_next)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def teh_next(message):
	try:
		if message.text == message.text:
			global tehtextbyuser
			global tehnamebyuser
			global tehidbyuser
			tehidbyuser = int(message.from_user.id)
			tehnamebyuser = str(message.from_user.first_name)
			tehtextbyuser = str(message.text)
			rmk = types.InlineKeyboardMarkup()
			item_yes = types.InlineKeyboardButton(text='‚úâÔ∏è',callback_data='tehsend')
			item_no = types.InlineKeyboardButton(text='‚ùå',callback_data='tehno')
			rmk.add(item_yes, item_no)
			msg = bot.send_message(message.chat.id, f"–î–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ:\n\n–¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {tehtextbyuser}\n\n–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ –ø–æ–º–æ—â–Ω–∏–∫—É?",parse_mode='Markdown',reply_markup=rmk)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.callback_query_handler(func=lambda call: call.data == 'tehsend' or call.data == 'tehno')
def teh_callback(call):
	try:
		if call.data == 'tehsend':
			for info in cur.execute(f"SELECT * FROM users WHERE id = {call.from_user.id}"):
				bot.delete_message(call.message.chat.id, call.message.message_id-0)
				bot.send_message(call.message.chat.id, f"–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–º–æ—â–Ω–∏–∫—É, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")
				bot.send_message(1942166894, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {tehnamebyuser} –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–º–æ—â–Ω–∏–∫—É\n\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {tehidbyuser}\n–¢–µ–∫—Å—Ç: {tehtextbyuser}\n\n–ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞–ø–∏—à–∏—Ç–µ /answer")
		elif call.data == 'tehno':
			bot.delete_message(call.message.chat.id, call.message.message_id-0)
			bot.send_message(call.message.chat.id, f"–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–º–æ—â–Ω–∏–∫—É")
		bot.answer_callback_query(callback_query_id=call.id)
	except:
		bot.send_message(call.message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.message_handler(commands=['viewprofile'])
def viewprofile(message):
	try:
		cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}")
		getaccess = cur.fetchone()[3]
		accessquery = 1
		if getaccess < accessquery:
			bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
		else:
			for info in cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}"):
				msg = bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
				bot.register_next_step_handler(msg, getprofile_next)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def getprofile_next(message):
	try:
		if message.text == message.text:
			getprofileid = message.text
			for info in cur.execute(f"SELECT * FROM users WHERE id = {getprofileid}"):
				if info[3] == 0:
					accessname = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
				elif info[3] == 1:
					accessname = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
				elif info[3] == 777:
					accessname = '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'
				bot.send_message(message.chat.id, f"*–ü—Ä–æ—Ñ–∏–ª—å {info[1]}:*\n\n*ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* {info[0]}\n*–ë–∞–ª–∞–Ω—Å:* {info[2]} ‚ÇΩ\n*–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞:* {accessname}\n*–ö—É–ø–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:* {info[4]}",parse_mode='Markdown')
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.message_handler(commands=['allusers'])
def allusers(message):
	try:
		cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}")
		getaccess = cur.fetchone()[3]
		accessquery = 1
		if getaccess < accessquery:
			bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
		else:
			text = '*–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:*\n\n'
			idusernumber = 0
			for info in cur.execute(f"SELECT * FROM users"):
				if info[3] == 0:
					accessname = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
				elif info[3] == 1:
					accessname = '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
				elif info[3] == 777:
					accessname = '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'
				idusernumber += 1
				text += f"*{idusernumber}. {info[0]} ({info[1]})*\n*–ë–∞–ª–∞–Ω—Å:* {info[2]} ‚ÇΩ\n*–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞:* {accessname}\n*–ü—Ä–æ—Ñ–∏–ª—å:*" + f" [{info[1]}](tg://user?id="+str(info[0])+")\n\n"
			bot.send_message(message.chat.id, f"{text}",parse_mode='Markdown')
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.message_handler(commands=['accesslvl'])
def setaccess(message):
	try:
		cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}")
		getaccess = cur.fetchone()[3]
		accessquery = 777
		if getaccess < accessquery:
			bot.send_message(message.chat.id, f"–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")
		else:
			for info in cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}"):
				msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', parse_mode="Markdown")
				bot.register_next_step_handler(msg, access_user_id_answer)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')
def access_user_id_answer(message):
	try:
		if message.text == message.text:
			global usridaccess
			usridaccess = message.text
			rmk = types.ReplyKeyboardMarkup(resize_keyboard=True)
			rmk.add(types.KeyboardButton('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'), types.KeyboardButton('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'), types.KeyboardButton('–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫'))
			msg = bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –í—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å?:', reply_markup=rmk, parse_mode="Markdown")
			bot.register_next_step_handler(msg, access_user_access_answer)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def access_user_access_answer(message):
	try:
		global accessgaved
		global accessgavedname
		rmk = types.InlineKeyboardMarkup()
		access_yes = types.InlineKeyboardButton(text='‚úÖ',callback_data='setaccessyes')
		access_no = types.InlineKeyboardButton(text='‚ùå',callback_data='setaccessno')
		rmk.add(access_yes, access_no)
		for info in cur.execute(f"SELECT * FROM users WHERE id = {usridaccess}"):
			if message.text == "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å":
				accessgavedname = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
				accessgaved = 0
			elif message.text == "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä":
				accessgavedname = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
				accessgaved = 1
			elif message.text == "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫":
				accessgavedname = "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫"
				accessgaved = 777

			bot.send_message(message.chat.id, f'–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–¥–∞—á–∏:\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {usridaccess} ({info[1]})\n–£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞: {message.text}\n\n–í–µ—Ä–Ω–æ?', reply_markup=rmk)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.callback_query_handler(lambda call: call.data == 'setaccessyes' or call.data == 'setaccessno')
def access_user_gave_access(call):
	try:
		removekeyboard = types.ReplyKeyboardRemove()
		if call.data == 'setaccessyes':
			for info in cur.execute(f"SELECT * FROM users WHERE id = {usridaccess}"):
				cur.execute(f"UPDATE users SET access = {accessgaved} WHERE id = {usridaccess}")
				con.commit()
				bot.delete_message(call.message.chat.id, call.message.message_id-0)
				bot.send_message(call.message.chat.id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {info[1]} –≤—ã–¥–∞–Ω —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ {accessgavedname}', reply_markup=removekeyboard)
		elif call.data == 'setaccessno':
			for info in cur.execute(f"SELECT * FROM users WHERE id = {usridaccess}"):
				bot.delete_message(call.message.chat.id, call.message.message_id-0)
				bot.send_message(call.message.chat.id, f'–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –≤—ã–¥–∞—á—É —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞ {accessgavedname} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {info[1]}', reply_markup=removekeyboard)
		bot.answer_callback_query(callback_query_id=call.id)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.message_handler(commands=['givemoney'])
def givemoney(message):
	try:
		cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}")
		getaccess = cur.fetchone()[3]
		accessquery = 777
		if getaccess < accessquery:
			bot.send_message(message.chat.id, f"–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")
		else:
			for info in cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}"):
				msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', parse_mode="Markdown")
				bot.register_next_step_handler(msg, rubles_user_id_answer)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def rubles_user_id_answer(message):
	try:
		if message.text == message.text:
			global usridrubles
			usridrubles = message.text
			rmk = types.ReplyKeyboardMarkup(resize_keyboard=True)
			rmk.add(types.KeyboardButton('10'), types.KeyboardButton('100'), types.KeyboardButton('1000'), types.KeyboardButton('–î—Ä—É–≥–∞—è —Å—É–º–º–∞'))
			msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–¥–∞—á–∏:', reply_markup=rmk, parse_mode="Markdown")
			bot.register_next_step_handler(msg, rubles_user_rubles_answer)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def rubles_user_rubles_answer(message):
	try:
		global rublesgavedvalue
		removekeyboard = types.ReplyKeyboardRemove()
		rmk = types.InlineKeyboardMarkup()
		access_yes = types.InlineKeyboardButton(text='‚úÖ',callback_data='giverublesyes')
		access_no = types.InlineKeyboardButton(text='‚ùå',callback_data='giverublesno')
		rmk.add(access_yes, access_no)
		for info in cur.execute(f"SELECT * FROM users WHERE id = {usridrubles}"):
			if message.text == '10':
				rublesgavedvalue = 10
				bot.send_message(message.chat.id, f'–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–¥–∞—á–∏:\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {usridrubles} ({info[1]})\n–°—É–º–º–∞: {rublesgavedvalue}\n\n–í–µ—Ä–Ω–æ?',reply_markup=rmk)
			elif message.text == '100':
				rublesgavedvalue = 100
				bot.send_message(message.chat.id, f'–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–¥–∞—á–∏:\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {usridrubles} ({info[1]})\n–°—É–º–º–∞: {rublesgavedvalue}\n\n–í–µ—Ä–Ω–æ?',reply_markup=rmk)
			elif message.text == '1000':
				rublesgavedvalue = 1000
				bot.send_message(message.chat.id, f'–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–¥–∞—á–∏:\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {usridrubles} ({info[1]})\n–°—É–º–º–∞: {rublesgavedvalue}\n\n–í–µ—Ä–Ω–æ?',reply_markup=rmk)
			elif message.text == '–î—Ä—É–≥–∞—è —Å—É–º–º–∞':
				msg = bot.send_message(message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–¥–∞—á–∏:*",parse_mode='Markdown',reply_markup=removekeyboard)
				bot.register_next_step_handler(msg, rubles_user_rubles_answer_other)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def rubles_user_rubles_answer_other(message):
	try:
		global rublesgavedvalue
		rmk = types.InlineKeyboardMarkup()
		access_yes = types.InlineKeyboardButton(text='‚úÖ',callback_data='giverublesyes')
		access_no = types.InlineKeyboardButton(text='‚ùå',callback_data='giverublesno')
		rmk.add(access_yes, access_no)
		for info in cur.execute(f"SELECT * FROM users WHERE id = {usridrubles}"):
			if message.text == message.text:
				rublesgavedvalue = int(message.text)
				bot.send_message(message.chat.id, f'–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–¥–∞—á–∏:\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {usridrubles} ({info[1]})\n–°—É–º–º–∞: {rublesgavedvalue}\n\n–í–µ—Ä–Ω–æ?',reply_markup=rmk)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.callback_query_handler(func=lambda call: call.data == 'giverublesyes' or call.data == 'giverublesno')
def rubles_gave_rubles_user(call):
	try:
		removekeyboard = types.ReplyKeyboardRemove()
		for info in cur.execute(f"SELECT * FROM users WHERE id = {usridrubles}"):
			rubless = int(info[2] + rublesgavedvalue)
			if call.data == 'giverublesyes':
				for info in cur.execute(f"SELECT * FROM users WHERE id = {usridrubles}"):
					cur.execute(f"UPDATE users SET cash = {rubless} WHERE id = {usridrubles}")
					con.commit()
					bot.delete_message(call.message.chat.id, call.message.message_id-0)
					bot.send_message(call.message.chat.id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {info[1]} –≤—ã–¥–∞–Ω–æ {rublesgavedvalue} —Ä—É–±–ª–µ–π', reply_markup=removekeyboard)
			elif call.data == 'giverublesno':
				for info in cur.execute(f"SELECT * FROM users WHERE id = {usridrubles}"):
					bot.delete_message(call.message.chat.id, call.message.message_id-0)
					bot.send_message(call.message.chat.id, f'–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –≤—ã–¥–∞—á—É —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {info[1]}', reply_markup=removekeyboard)
			bot.answer_callback_query(callback_query_id=call.id)
	except:
		bot.send_message(call.message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')
@bot.message_handler(commands=['getid'])
def getid(message):
	try:
		cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}")
		getaccess = cur.fetchone()[3]
		accessquery = 1
		if getaccess < accessquery:
			bot.send_message(message.chat.id, f"–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!")
		else:
			msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:')
			bot.register_next_step_handler(msg, next_getiduser_name)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def next_getiduser_name(message):
	try:
		if message.text == message.text:
			getusername = message.text
			cur.execute(f"SELECT * FROM users WHERE nick = '{getusername}'")
			result = cur.fetchone()[0]
			bot.send_message(message.chat.id, f'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {result}')
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.message_handler(commands=['addbuy'])
def addbuy(message):
	try:
		with lock:
			cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}")
			getaccess = cur.fetchone()[3]
		if getaccess < 1:
			bot.send_message(message.chat.id, '*–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!*')
		else:
			msg = bot.send_message(message.chat.id, '*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞:*',parse_mode='Markdown')
			bot.register_next_step_handler(msg, addbuy_id)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def addbuy_id(message):
	try:
		if message.text == message.text:
			global addbuyid
			addbuyid = message.text
			msg = bot.send_message(message.chat.id, '*–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –∞–∫–∫–∞—É–Ω—Ç–∞:*',parse_mode='Markdown')
			bot.register_next_step_handler(msg, addbuy_price)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def addbuy_price(message):
	try:
		if message.text == message.text:
			global addbuyprice
			addbuyprice = message.text
			msg = bot.send_message(message.chat.id, '*–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã:*',parse_mode='Markdown')
			bot.register_next_step_handler(msg, addbuy_name)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def addbuy_name(message):
	try:
		if message.text == message.text:
			global addbuyname
			addbuyname = message.text
			msg = bot.send_message(message.chat.id, '*–í–≤–µ–¥–∏—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:*',parse_mode='Markdown')
			bot.register_next_step_handler(msg, addbuy_result)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def addbuy_result(message):
	try:
		if message.text == message.text:
			global addbuytovar
			addbuytovar = message.text
			cur.execute(f"SELECT name FROM shop WHERE name = '{addbuyname}'")
			if cur.fetchone() is None:
				cur.execute(f"INSERT INTO shop VALUES ({addbuyid}, '{addbuyname}', {addbuyprice}, '{addbuytovar}', '')")
				con.commit()
				cur.execute(f"SELECT * FROM shop WHERE name = '{addbuyname}'")
				bot.send_message(message.chat.id, f'‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–∏–ª–∏ —Ç–æ–≤–∞—Ä\nID —Ç–æ–≤–∞—Ä–∞: {cur.fetchone()[0]}\n–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã: {addbuyname}\n–¶–µ–Ω–∞: {addbuyprice}\n–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞: {addbuytovar}')
			else:
				bot.send_message(message.chat.id, f"‚õî –î–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω!")
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')


def donate_value(message):
	try:
		if message.text == message.text:
			global donatevalue
			global commentdonate
			global getusername
			global getuserdonateid
			getusername = message.from_user.first_name
			getuserdonateid = message.from_user.id
			cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}")
			commentdonate = cur.fetchone()[0]
			donatevalue = int(message.text)
			rmk = types.InlineKeyboardMarkup()
			item_yes = types.InlineKeyboardButton(text='‚úÖ',callback_data='donateyes')
			item_no = types.InlineKeyboardButton(text='‚ùå',callback_data='donateno')
			rmk.add(item_yes, item_no)
			global qiwibalancebe
			qiwibalancebe = api.balance
			msg = bot.send_message(message.chat.id, f"–ó–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞\n\n–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞?",parse_mode='Markdown',reply_markup=rmk)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def donateyesoplacheno(message):
	try:
		removekeyboard = types.ReplyKeyboardRemove()
		if message.text == '‚úÖ –û–ø–ª–∞—á–µ–Ω–æ':
			bot.send_message(message.chat.id, f"–í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º, –æ–∂–∏–¥–∞–π—Ç–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∏ –≤—ã–¥–∞—á–∏ —Å—Ä–µ–¥—Å—Ç–≤.",reply_markup=removekeyboard)
			bot.send_message(1942166894, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {getusername} –æ–ø–ª–∞—Ç–∏–ª –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤\n\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {getuserdonateid}\n–°—É–º–º–∞: {donatevalue}‚ÇΩ\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {commentdonate}\n\n–ë–∞–ª–∞–Ω—Å –≤–∞—à–µ–≥–æ QIWI —Ä–∞–Ω—å—à–µ: {qiwibalancebe}\n–ë–∞–ª–∞–Ω—Å –≤–∞—à–µ–≥–æ QIWI —Å–µ–π—á–∞—Å: {api.balance}\n\n–ü–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–µ—Ä–Ω–æ—Å—Ç—å –æ–ø–ª–∞—Ç—ã –∑–∞—Ç–µ–º –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–¥–∞—á—É —Å—Ä–µ–¥—Å—Ç–≤.\n–î–ª—è –≤—ã–¥–∞—á–∏ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞–ø–∏—à–∏—Ç–µ: /giverub")
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.callback_query_handler(lambda call: call.data == 'donateyes' or call.data == 'donateno')
def donate_result(call):
	try:
		removekeyboard = types.ReplyKeyboardRemove()
		rmk = types.ReplyKeyboardMarkup(resize_keyboard=True)
		rmk.add(types.KeyboardButton('‚úÖ –û–ø–ª–∞—á–µ–Ω–æ'))
		if call.data == 'donateyes':
			bot.delete_message(call.message.chat.id, call.message.message_id-0)
			msg = bot.send_message(call.message.chat.id, f"–ö–æ—à–µ–ª–µ–∫ –¥–ª—è –æ–ø–ª–∞—Ç—ã: +79217038628\n–°—É–º–º–∞: {donatevalue}‚ÇΩ\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {commentdonate}\n",parse_mode='Markdown',reply_markup=rmk)
			bot.register_next_step_handler(msg, donateyesoplacheno)
		elif call.data == 'donateno':
			bot.send_message(call.message.chat.id, f"–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤",reply_markup=removekeyboard)
		bot.answer_callback_query(callback_query_id=call.id)
	except:
		bot.send_message(call.message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.message_handler(commands=['changebuy'])
def changebuy(message):
	try:
		accessquery = 1
		with lock:
			cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}")
			getaccess = cur.fetchone()[3]
		if getaccess < 1:
			bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
		else:
			rmk = types.InlineKeyboardMarkup()
			item_name = types.InlineKeyboardButton(text='–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã',callback_data='editbuyname')
			item_price = types.InlineKeyboardButton(text='–¶–µ–Ω–∞',callback_data='editbuyprice')
			item_tovar = types.InlineKeyboardButton(text='–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏',callback_data='editbuytovar')
			rmk.add(item_name, item_price, item_tovar)
			msg = bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:",reply_markup=rmk,parse_mode='Markdown')
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def editbuy_name(message):
	try:
		if message.text == message.text:
			global editbuynameidtovar
			editbuynameidtovar = int(message.text)
			msg = bot.send_message(message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã:*",parse_mode='Markdown')
			bot.register_next_step_handler(msg, editbuy_name_new_name)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def editbuy_name_new_name(message):
	try:
		if message.text == message.text:
			global editbuynametovar
			editbuynametovar = message.text
			for infoshop in cur.execute(f"SELECT * FROM shop WHERE id = {editbuynameidtovar}"):
				rmk = types.InlineKeyboardMarkup()
				item_yes = types.InlineKeyboardButton(text='‚úÖ', callback_data='editbuynewnametovaryes')
				item_no = types.InlineKeyboardButton(text='‚ùå', callback_data='editbuynewnametovarno')
				rmk.add(item_yes, item_no)
				msg = bot.send_message(message.chat.id, f"*–ù–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:*\n\nID —Ç–æ–≤–∞—Ä–∞: {editbuynameidtovar}\n–°—Ç–∞—Ä–æ–µ –∏–º—è –∏–≥—Ä—ã: {infoshop[1]}\n–ù–æ–≤–æ–µ –∏–º—è –∏–≥—Ä—ã: {editbuynametovar}\n\n–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è?",parse_mode='Markdown',reply_markup=rmk)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def editbuy_price(message):
	try:
		if message.text == message.text:
			global editbuypriceidtovar
			editbuypriceidtovar = int(message.text)
			msg = bot.send_message(message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞:*",parse_mode='Markdown')
			bot.register_next_step_handler(msg, editbuy_price_new_price)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def editbuy_price_new_price(message):
	try:
		if message.text == message.text:
			global editbuypricetovar
			editbuypricetovar = int(message.text)
			for infoshop in cur.execute(f"SELECT * FROM shop WHERE id = {editbuypriceidtovar}"):
				rmk = types.InlineKeyboardMarkup()
				item_yes = types.InlineKeyboardButton(text='‚úÖ', callback_data='editbuynewpricetovaryes')
				item_no = types.InlineKeyboardButton(text='‚ùå', callback_data='editbuynewpricetovarno')
				rmk.add(item_yes, item_no)
				msg = bot.send_message(message.chat.id, f"*–ù–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:*\n\nID —Ç–æ–≤–∞—Ä–∞: {editbuypriceidtovar}\n–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: {infoshop[2]}\n–ù–æ–≤–∞—è —Ü–µ–Ω–∞: {editbuypricetovar}\n\n–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è?",parse_mode='Markdown',reply_markup=rmk)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def editbuy_tovar(message):
	try:
		if message.text == message.text:
			global editbuytovaridtovar
			editbuytovaridtovar = int(message.text)
			msg = bot.send_message(message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞:*",parse_mode='Markdown')
			bot.register_next_step_handler(msg, editbuy_tovar_new_tovar)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def editbuy_tovar_new_tovar(message):
	try:
		if message.text == message.text:
			global editbuytovartovar
			editbuytovartovar = message.text
			for infoshop in cur.execute(f"SELECT * FROM shop WHERE id = {editbuytovaridtovar}"):
				rmk = types.InlineKeyboardMarkup()
				item_yes = types.InlineKeyboardButton(text='‚úÖ', callback_data='editbuynewtovartovaryes')
				item_no = types.InlineKeyboardButton(text='‚ùå', callback_data='editbuynewtovartovarno')
				rmk.add(item_yes, item_no)
				msg = bot.send_message(message.chat.id, f"*–ù–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–µ:*\n\nID —Ç–æ–≤–∞—Ä–∞: {editbuytovaridtovar}\n–°—Ç–∞—Ä—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: {infoshop[3]}\n–ù–æ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: {editbuytovartovar}\n\n–í—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è?",parse_mode='Markdown',reply_markup=rmk)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.callback_query_handler(lambda call: call.data == 'editbuynewtovartovaryes' or call.data == 'editbuynewtovartovarno')
def editbuy_tovar_new_callback(call):
	try:
		if call.data == 'editbuynewtovartovaryes':
			cur.execute(f"SELECT * FROM shop WHERE id = {editbuytovaridtovar}")
			cur.execute(f"UPDATE shop SET tovar = '{editbuytovartovar}' WHERE id = {editbuytovaridtovar}")
			con.commit()
			bot.delete_message(call.message.chat.id, call.message.message_id-0)
			bot.send_message(call.message.chat.id, f"–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–∞ {editbuytovartovar}")
		elif call.data == 'editbuynewtovartovarno':
			bot.delete_message(call.message.chat.id, call.message.message_id-0)
			bot.send_message(call.message.chat.id, f"–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞")
		bot.answer_callback_query(callback_query_id=call.id)
	except:
		bot.send_message(call.message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.callback_query_handler(lambda call: call.data == 'editbuynewpricetovaryes' or call.data == 'editbuynewpricetovarno')
def editbuy_price_new_callback(call):
	try:
		if call.data == 'editbuynewpricetovaryes':
			cur.execute(f"SELECT * FROM shop WHERE id = {editbuypriceidtovar}")
			cur.execute(f"UPDATE shop SET price = {editbuypricetovar} WHERE id = {editbuypriceidtovar}")
			con.commit()
			bot.delete_message(call.message.chat.id, call.message.message_id-0)
			bot.send_message(call.message.chat.id, f"–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ —Ü–µ–Ω—É –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–∞ {editbuypricetovar}")
		elif call.data == 'editbuynewpricetovarno':
			bot.delete_message(call.message.chat.id, call.message.message_id-0)
			bot.send_message(call.message.chat.id, f"–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã —Ç–æ–≤–∞—Ä–∞")
		bot.answer_callback_query(callback_query_id=call.id)
	except:
		bot.send_message(call.message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')
@bot.callback_query_handler(lambda call: call.data == 'editbuynewnametovaryes' or call.data == 'editbuynewnametovarno')
def editbuy_name_new_callback(call):
	try:
		if call.data == 'editbuynewnametovaryes':
			cur.execute(f"SELECT * FROM shop WHERE id = {editbuynameidtovar}")
			cur.execute(f"UPDATE shop SET name = '{editbuynametovar}' WHERE id = {editbuynameidtovar}")
			con.commit()
			bot.delete_message(call.message.chat.id, call.message.message_id-0)
			bot.send_message(call.message.chat.id, f"–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã –Ω–∞ {editbuynametovar}")
		elif call.data == 'editbuynewnametovarno':
			bot.delete_message(call.message.chat.id, call.message.message_id-0)
			bot.send_message(call.message.chat.id, f"–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–≥—Ä—ã")
		bot.answer_callback_query(callback_query_id=call.id)
	except:
		bot.send_message(call.message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')


@bot.callback_query_handler(lambda call: call.data == 'editbuyname' or call.data == 'editbuyprice' or call.data == 'editbuytovar')
def editbuy_first_callback(call):
	try:
		if call.data == 'editbuyname':
			msg = bot.send_message(call.message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ:*",parse_mode='Markdown')
			bot.register_next_step_handler(msg, editbuy_name)
		elif call.data == 'editbuyprice':
			msg = bot.send_message(call.message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É:*",parse_mode='Markdown')
			bot.register_next_step_handler(msg, editbuy_price)
		elif call.data == 'editbuytovar':
			msg = bot.send_message(call.message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:*",parse_mode='Markdown')
			bot.register_next_step_handler(msg, editbuy_tovar)
		bot.answer_callback_query(callback_query_id=call.id)
	except:
		bot.send_message(call.message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.message_handler(commands=['deletebuy'])
def deletebuy(message):
	try:
		accessquery = 1
		with lock:
			cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}")
			getaccess = cur.fetchone()[3]
		if getaccess < 1:
			bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞!')
		else:
			msg = bot.send_message(message.chat.id, f"*–í–≤–µ–¥–∏—Ç–µ ID —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å:*",parse_mode='Markdown')
			bot.register_next_step_handler(msg, removebuy_next)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def removebuy_next(message):
	try:
		if message.text == message.text:
			global removeidtovar
			removeidtovar = int(message.text)
			for info in cur.execute(f"SELECT * FROM users WHERE id = {message.from_user.id}"):
				for infoshop in cur.execute(f"SELECT * FROM shop WHERE id = {removeidtovar}"):
					rmk = types.InlineKeyboardMarkup()
					item_yes = types.InlineKeyboardButton(text='‚úÖ',callback_data='removebuytovaryes')
					item_no = types.InlineKeyboardButton(text='‚ùå',callback_data='removebuytovarno')
					rmk.add(item_yes, item_no)
					msg = bot.send_message(message.chat.id, f"–î–∞–Ω–Ω—ã–µ –æ–± —É–¥–∞–ª–µ–Ω–∏–∏:\n\nID —Ç–æ–≤–∞—Ä–∞: {infoshop[0]}\n–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã: {infoshop[1]}\n–¶–µ–Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–∞: {infoshop[2]}\n–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:\n {infoshop[3]}\n\n–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä?",reply_markup=rmk)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.callback_query_handler(lambda call: call.data == 'removebuytovaryes' or call.data == 'removebuytovarno')
def removebuy_callback(call):
	try:
		if call.data == 'removebuytovaryes':
			cur.execute(f"SELECT * FROM shop")
			cur.execute(f"DELETE FROM shop WHERE id = {removeidtovar}")
			bot.delete_message(call.message.chat.id, call.message.message_id-0)
			bot.send_message(call.message.chat.id, f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª–∏ —Ç–æ–≤–∞—Ä")
			con.commit()
		elif call.data == 'removebuytovarno':
			bot.delete_message(call.message.chat.id, call.message.message_id-0)
			bot.send_message(call.message.chat.id, f"üö´ –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞")
		bot.answer_callback_query(callback_query_id=call.id)
	except:
		bot.send_message(call.message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.message_handler(commands=['answer'])
def answer(message):
	try:
		msg = bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ:")
		bot.register_next_step_handler(msg, sendmsgtouser_next)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def sendmsgtouser_next(message):
	try:
		if message.text == message.text:
			global getsendmsgtouserid
			getsendmsgtouserid = int(message.text)
			msg = bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:")
			bot.register_next_step_handler(msg, sendmsgtouser_next_text)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

def sendmsgtouser_next_text(message):
	try:
		if message.text == message.text:
			global getsendmsgtousertext
			getsendmsgtousertext = str(message.text)
			rmk = types.InlineKeyboardMarkup()
			item_yes = types.InlineKeyboardButton(text='‚úÖ',callback_data='sendmsgtouseryes')
			item_no = types.InlineKeyboardButton(text='‚ùå',callback_data='sendmsgtouserno')
			rmk.add(item_yes, item_no)
			msg = bot.send_message(message.chat.id, f"–î–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:\n\nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {getsendmsgtouserid}\n–¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {getsendmsgtousertext}\n\n–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ?",reply_markup=rmk)
	except:
		bot.send_message(message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')

@bot.callback_query_handler(func=lambda call: call.data == 'sendmsgtouseryes' or call.data == 'sendmsgtouserno')
def sendmsgtouser_callback(call):
	try:
		if call.data == 'sendmsgtouseryes':
			bot.delete_message(call.message.chat.id, call.message.message_id-0)
			bot.send_message(call.message.chat.id, f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
			bot.send_message(getsendmsgtouserid, f"*–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–∏—Å–ª–∞–ª –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ:*\n\n{getsendmsgtousertext}",parse_mode='Markdown')
		elif call.data == 'sendmsgtouserno':
			bot.delete_message(call.message.chat.id, call.message.message_id-0)
			bot.send_message(call.message.chat.id, f"üö´ | –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
		bot.answer_callback_query(callback_query_id=call.id)
	except:
		bot.send_message(call.message.chat.id, f'üö´ –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help! üö´')



bot.polling(none_stop=True,interval=0)